// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: internal/conf/v1/conf.proto

package confv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        *Server                `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Data          *Data                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Auth          *Auth                  `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Trace         *Trace                 `protobuf:"bytes,4,opt,name=trace,proto3" json:"trace,omitempty"`
	Discovery     *Discovery             `protobuf:"bytes,5,opt,name=discovery,proto3" json:"discovery,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Bootstrap) GetTrace() *Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Bootstrap) GetDiscovery() *Discovery {
	if x != nil {
		return x.Discovery
	}
	return nil
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      *Data_Database         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Redis         *Data_Redis            `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

type Auth struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	JwtSecret               string                 `protobuf:"bytes,1,opt,name=jwt_secret,json=jwtSecret,proto3" json:"jwt_secret,omitempty"`
	JwtExpireHours          int64                  `protobuf:"varint,2,opt,name=jwt_expire_hours,json=jwtExpireHours,proto3" json:"jwt_expire_hours,omitempty"`
	ChallengeTimeoutSeconds int64                  `protobuf:"varint,3,opt,name=challenge_timeout_seconds,json=challengeTimeoutSeconds,proto3" json:"challenge_timeout_seconds,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Auth) GetJwtSecret() string {
	if x != nil {
		return x.JwtSecret
	}
	return ""
}

func (x *Auth) GetJwtExpireHours() int64 {
	if x != nil {
		return x.JwtExpireHours
	}
	return 0
}

func (x *Auth) GetChallengeTimeoutSeconds() int64 {
	if x != nil {
		return x.ChallengeTimeoutSeconds
	}
	return 0
}

type Trace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Insecure      bool                   `protobuf:"varint,2,opt,name=insecure,proto3" json:"insecure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trace) Reset() {
	*x = Trace{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Trace) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Trace) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

type Discovery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consul        *Discovery_Consul      `protobuf:"bytes,1,opt,name=consul,proto3" json:"consul,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Discovery) Reset() {
	*x = Discovery{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Discovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discovery) ProtoMessage() {}

func (x *Discovery) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discovery.ProtoReflect.Descriptor instead.
func (*Discovery) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Discovery) GetConsul() *Discovery_Consul {
	if x != nil {
		return x.Consul
	}
	return nil
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       int64                  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type Data_Database struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	DbName        string                 `protobuf:"bytes,5,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	SslMode       string                 `protobuf:"bytes,6,opt,name=ssl_mode,json=sslMode,proto3" json:"ssl_mode,omitempty"`
	Timezone      string                 `protobuf:"bytes,7,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Pool          *Data_DatabasePool     `protobuf:"bytes,8,opt,name=pool,proto3" json:"pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Data_Database) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Data_Database) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Data_Database) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Data_Database) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Database) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *Data_Database) GetSslMode() string {
	if x != nil {
		return x.SslMode
	}
	return ""
}

func (x *Data_Database) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Data_Database) GetPool() *Data_DatabasePool {
	if x != nil {
		return x.Pool
	}
	return nil
}

type Data_DatabasePool struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaxConns        int32                  `protobuf:"varint,1,opt,name=max_conns,json=maxConns,proto3" json:"max_conns,omitempty"`
	MinConns        int32                  `protobuf:"varint,2,opt,name=min_conns,json=minConns,proto3" json:"min_conns,omitempty"`
	MaxConnLifetime int64                  `protobuf:"varint,3,opt,name=max_conn_lifetime,json=maxConnLifetime,proto3" json:"max_conn_lifetime,omitempty"`
	MaxConnIdleTime int64                  `protobuf:"varint,4,opt,name=max_conn_idle_time,json=maxConnIdleTime,proto3" json:"max_conn_idle_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Data_DatabasePool) Reset() {
	*x = Data_DatabasePool{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_DatabasePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_DatabasePool) ProtoMessage() {}

func (x *Data_DatabasePool) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_DatabasePool.ProtoReflect.Descriptor instead.
func (*Data_DatabasePool) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Data_DatabasePool) GetMaxConns() int32 {
	if x != nil {
		return x.MaxConns
	}
	return 0
}

func (x *Data_DatabasePool) GetMinConns() int32 {
	if x != nil {
		return x.MinConns
	}
	return 0
}

func (x *Data_DatabasePool) GetMaxConnLifetime() int64 {
	if x != nil {
		return x.MaxConnLifetime
	}
	return 0
}

func (x *Data_DatabasePool) GetMaxConnIdleTime() int64 {
	if x != nil {
		return x.MaxConnIdleTime
	}
	return 0
}

type Data_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Db            int32                  `protobuf:"varint,5,opt,name=db,proto3" json:"db,omitempty"`
	DialTimeout   int64                  `protobuf:"varint,6,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`
	ReadTimeout   int64                  `protobuf:"varint,7,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout  int64                  `protobuf:"varint,8,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	PoolSize      int32                  `protobuf:"varint,9,opt,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`
	MinIdleConns  int32                  `protobuf:"varint,10,opt,name=min_idle_conns,json=minIdleConns,proto3" json:"min_idle_conns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Data_Redis) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Data_Redis) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Data_Redis) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Data_Redis) GetDialTimeout() int64 {
	if x != nil {
		return x.DialTimeout
	}
	return 0
}

func (x *Data_Redis) GetReadTimeout() int64 {
	if x != nil {
		return x.ReadTimeout
	}
	return 0
}

func (x *Data_Redis) GetWriteTimeout() int64 {
	if x != nil {
		return x.WriteTimeout
	}
	return 0
}

func (x *Data_Redis) GetPoolSize() int32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *Data_Redis) GetMinIdleConns() int32 {
	if x != nil {
		return x.MinIdleConns
	}
	return 0
}

type Discovery_Consul struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Scheme        string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	HealthCheck   bool                   `protobuf:"varint,3,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Discovery_Consul) Reset() {
	*x = Discovery_Consul{}
	mi := &file_internal_conf_v1_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Discovery_Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discovery_Consul) ProtoMessage() {}

func (x *Discovery_Consul) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_v1_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discovery_Consul.ProtoReflect.Descriptor instead.
func (*Discovery_Consul) Descriptor() ([]byte, []int) {
	return file_internal_conf_v1_conf_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Discovery_Consul) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Discovery_Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Discovery_Consul) GetHealthCheck() bool {
	if x != nil {
		return x.HealthCheck
	}
	return false
}

var File_internal_conf_v1_conf_proto protoreflect.FileDescriptor

const file_internal_conf_v1_conf_proto_rawDesc = "" +
	"\n" +
	"\x1binternal/conf/v1/conf.proto\x12\aconf.v1\"\xd2\x01\n" +
	"\tBootstrap\x12'\n" +
	"\x06server\x18\x01 \x01(\v2\x0f.conf.v1.ServerR\x06server\x12!\n" +
	"\x04data\x18\x02 \x01(\v2\r.conf.v1.DataR\x04data\x12!\n" +
	"\x04auth\x18\x03 \x01(\v2\r.conf.v1.AuthR\x04auth\x12$\n" +
	"\x05trace\x18\x04 \x01(\v2\x0e.conf.v1.TraceR\x05trace\x120\n" +
	"\tdiscovery\x18\x05 \x01(\v2\x12.conf.v1.DiscoveryR\tdiscovery\"h\n" +
	"\x06Server\x12(\n" +
	"\x04http\x18\x01 \x01(\v2\x14.conf.v1.Server.HTTPR\x04http\x1a4\n" +
	"\x04HTTP\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x03R\atimeout\"\x96\x06\n" +
	"\x04Data\x122\n" +
	"\bdatabase\x18\x01 \x01(\v2\x16.conf.v1.Data.DatabaseR\bdatabase\x12)\n" +
	"\x05redis\x18\x02 \x01(\v2\x13.conf.v1.Data.RedisR\x05redis\x1a\xe2\x01\n" +
	"\bDatabase\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x17\n" +
	"\adb_name\x18\x05 \x01(\tR\x06dbName\x12\x19\n" +
	"\bssl_mode\x18\x06 \x01(\tR\asslMode\x12\x1a\n" +
	"\btimezone\x18\a \x01(\tR\btimezone\x12.\n" +
	"\x04pool\x18\b \x01(\v2\x1a.conf.v1.Data.DatabasePoolR\x04pool\x1a\xa1\x01\n" +
	"\fDatabasePool\x12\x1b\n" +
	"\tmax_conns\x18\x01 \x01(\x05R\bmaxConns\x12\x1b\n" +
	"\tmin_conns\x18\x02 \x01(\x05R\bminConns\x12*\n" +
	"\x11max_conn_lifetime\x18\x03 \x01(\x03R\x0fmaxConnLifetime\x12+\n" +
	"\x12max_conn_idle_time\x18\x04 \x01(\x03R\x0fmaxConnIdleTime\x1a\xa5\x02\n" +
	"\x05Redis\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x05 \x01(\x05R\x02db\x12!\n" +
	"\fdial_timeout\x18\x06 \x01(\x03R\vdialTimeout\x12!\n" +
	"\fread_timeout\x18\a \x01(\x03R\vreadTimeout\x12#\n" +
	"\rwrite_timeout\x18\b \x01(\x03R\fwriteTimeout\x12\x1b\n" +
	"\tpool_size\x18\t \x01(\x05R\bpoolSize\x12$\n" +
	"\x0emin_idle_conns\x18\n" +
	" \x01(\x05R\fminIdleConns\"\x8b\x01\n" +
	"\x04Auth\x12\x1d\n" +
	"\n" +
	"jwt_secret\x18\x01 \x01(\tR\tjwtSecret\x12(\n" +
	"\x10jwt_expire_hours\x18\x02 \x01(\x03R\x0ejwtExpireHours\x12:\n" +
	"\x19challenge_timeout_seconds\x18\x03 \x01(\x03R\x17challengeTimeoutSeconds\"?\n" +
	"\x05Trace\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\binsecure\x18\x02 \x01(\bR\binsecure\"\x97\x01\n" +
	"\tDiscovery\x121\n" +
	"\x06consul\x18\x01 \x01(\v2\x19.conf.v1.Discovery.ConsulR\x06consul\x1aW\n" +
	"\x06Consul\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12!\n" +
	"\fhealth_check\x18\x03 \x01(\bR\vhealthCheckB|\n" +
	"\vcom.conf.v1B\tConfProtoP\x01Z%connect-go-example/gen/conf/v1;confv1\xa2\x02\x03CXX\xaa\x02\aConf.V1\xca\x02\aConf\\V1\xe2\x02\x13Conf\\V1\\GPBMetadata\xea\x02\bConf::V1b\x06proto3"

var (
	file_internal_conf_v1_conf_proto_rawDescOnce sync.Once
	file_internal_conf_v1_conf_proto_rawDescData []byte
)

func file_internal_conf_v1_conf_proto_rawDescGZIP() []byte {
	file_internal_conf_v1_conf_proto_rawDescOnce.Do(func() {
		file_internal_conf_v1_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_conf_v1_conf_proto_rawDesc), len(file_internal_conf_v1_conf_proto_rawDesc)))
	})
	return file_internal_conf_v1_conf_proto_rawDescData
}

var (
	file_internal_conf_v1_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
	file_internal_conf_v1_conf_proto_goTypes  = []any{
		(*Bootstrap)(nil),         // 0: conf.v1.Bootstrap
		(*Server)(nil),            // 1: conf.v1.Server
		(*Data)(nil),              // 2: conf.v1.Data
		(*Auth)(nil),              // 3: conf.v1.Auth
		(*Trace)(nil),             // 4: conf.v1.Trace
		(*Discovery)(nil),         // 5: conf.v1.Discovery
		(*Server_HTTP)(nil),       // 6: conf.v1.Server.HTTP
		(*Data_Database)(nil),     // 7: conf.v1.Data.Database
		(*Data_DatabasePool)(nil), // 8: conf.v1.Data.DatabasePool
		(*Data_Redis)(nil),        // 9: conf.v1.Data.Redis
		(*Discovery_Consul)(nil),  // 10: conf.v1.Discovery.Consul
	}
)

var file_internal_conf_v1_conf_proto_depIdxs = []int32{
	1,  // 0: conf.v1.Bootstrap.server:type_name -> conf.v1.Server
	2,  // 1: conf.v1.Bootstrap.data:type_name -> conf.v1.Data
	3,  // 2: conf.v1.Bootstrap.auth:type_name -> conf.v1.Auth
	4,  // 3: conf.v1.Bootstrap.trace:type_name -> conf.v1.Trace
	5,  // 4: conf.v1.Bootstrap.discovery:type_name -> conf.v1.Discovery
	6,  // 5: conf.v1.Server.http:type_name -> conf.v1.Server.HTTP
	7,  // 6: conf.v1.Data.database:type_name -> conf.v1.Data.Database
	9,  // 7: conf.v1.Data.redis:type_name -> conf.v1.Data.Redis
	10, // 8: conf.v1.Discovery.consul:type_name -> conf.v1.Discovery.Consul
	8,  // 9: conf.v1.Data.Database.pool:type_name -> conf.v1.Data.DatabasePool
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_internal_conf_v1_conf_proto_init() }
func file_internal_conf_v1_conf_proto_init() {
	if File_internal_conf_v1_conf_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_conf_v1_conf_proto_rawDesc), len(file_internal_conf_v1_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_conf_v1_conf_proto_goTypes,
		DependencyIndexes: file_internal_conf_v1_conf_proto_depIdxs,
		MessageInfos:      file_internal_conf_v1_conf_proto_msgTypes,
	}.Build()
	File_internal_conf_v1_conf_proto = out.File
	file_internal_conf_v1_conf_proto_goTypes = nil
	file_internal_conf_v1_conf_proto_depIdxs = nil
}
