// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package models

import (
	"context"
)

const CreateUser = `-- name: CreateUser :one
INSERT INTO users (username, password_hash, salt)
VALUES ($1, $2, $3)
RETURNING id, username, password_hash, salt, created_at, updated_at
`

type CreateUserParams struct {
	Username     string
	PasswordHash string
	Salt         string
}

// CreateUser
//
//	INSERT INTO users (username, password_hash, salt)
//	VALUES ($1, $2, $3)
//	RETURNING id, username, password_hash, salt, created_at, updated_at
func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, CreateUser, arg.Username, arg.PasswordHash, arg.Salt)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.PasswordHash,
		&i.Salt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const GetUserByName = `-- name: GetUserByName :one
SELECT username, salt, id, password_hash
FROM users
WHERE username = $1
`

type GetUserByNameRow struct {
	Username     string
	Salt         string
	ID           int32
	PasswordHash string
}

// GetUserByName
//
//	SELECT username, salt, id, password_hash
//	FROM users
//	WHERE username = $1
func (q *Queries) GetUserByName(ctx context.Context, username string) (GetUserByNameRow, error) {
	row := q.db.QueryRow(ctx, GetUserByName, username)
	var i GetUserByNameRow
	err := row.Scan(
		&i.Username,
		&i.Salt,
		&i.ID,
		&i.PasswordHash,
	)
	return i, err
}

const InsertTestUser = `-- name: InsertTestUser :one
INSERT INTO users(username, password_hash, salt)
VALUES ('admin', 'asdas', '123123')
RETURNING id, username, password_hash, salt, created_at, updated_at
`

// InsertTestUser
//
//	INSERT INTO users(username, password_hash, salt)
//	VALUES ('admin', 'asdas', '123123')
//	RETURNING id, username, password_hash, salt, created_at, updated_at
func (q *Queries) InsertTestUser(ctx context.Context) (User, error) {
	row := q.db.QueryRow(ctx, InsertTestUser)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.PasswordHash,
		&i.Salt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
